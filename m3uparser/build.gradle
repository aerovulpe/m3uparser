buildscript {
    ext.kotlin_version = '1.2.40'
    ext.junitPlatformVersion = "1.0.2"
    ext.junitJupiterVersion = "5.0.2"
    ext.antlrVersion = "4.7"

    repositories {
        jcenter()
    }
    dependencies {
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version")
        classpath("org.junit.platform:junit-platform-gradle-plugin:$junitPlatformVersion")
    }
}

plugins {
    id "org.jetbrains.kotlin.jvm" version '1.2.40'
    id 'com.gradle.build-scan' version '1.13.1'
}

buildScan {
    termsOfServiceUrl = 'https://gradle.com/terms-of-service'
    termsOfServiceAgree = 'yes'
}

apply plugin: 'kotlin'
apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: 'antlr'
apply plugin: 'idea'

group 'ru.grushetsky'
version '0.0-SNAPSHOT'

repositories {
    jcenter()
}

dependencies {
    antlr("org.antlr:antlr4:$antlrVersion")

    implementation("org.antlr:antlr4-runtime:$antlrVersion")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version")

    testImplementation("org.junit.jupiter:junit-jupiter-api:$junitJupiterVersion")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:$junitJupiterVersion")
    testRuntime("org.junit.jupiter:junit-jupiter-params:$junitJupiterVersion")
    testRuntime("org.junit.platform:junit-platform-launcher:$junitPlatformVersion")
}

ext.javaVersion = JavaVersion.VERSION_1_8

sourceCompatibility = ext.javaVersion
targetCompatibility = ext.javaVersion

compileKotlin {
    kotlinOptions.jvmTarget = javaVersion.toString()
}

compileTestKotlin {
    kotlinOptions.jvmTarget = javaVersion.toString()
}

generateGrammarSource {
    maxHeapSize = "64m"
    arguments += ['-package', 'ru.grushetsky.m3uparser.generated']
    outputDirectory = new File("src/main/java/ru/grushetsky/m3uparser/generated".toString())
}

compileJava.dependsOn generateGrammarSource

compileJava.source sourceSets.main.java

clean {
    delete "src/main/java/ru/grushetsky/m3uparser/generated"
}