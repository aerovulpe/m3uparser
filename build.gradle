buildscript {
    ext.kotlin_version = "1.2.41"
    ext.junitPlatformVersion = "1.2.0"
    ext.junitJupiterVersion = "5.2.0"
    ext.antlrVersion = "4.7"
    ext.assertJVersion = "3.9.1"

    repositories {
        jcenter()
    }
    dependencies {
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version")
    }
}

plugins {
    id "org.jetbrains.kotlin.jvm" version "1.2.41"
    id "com.gradle.build-scan" version "1.13.1"
}

test {
    useJUnitPlatform()
}

buildScan {
    termsOfServiceUrl = "https://gradle.com/terms-of-service"
    termsOfServiceAgree = "yes"
}

apply plugin: "kotlin"
apply plugin: "antlr"
apply plugin: "idea"

group "ru.grushetsky"
version "0.0-SNAPSHOT"

repositories {
    jcenter()
}

dependencies {
    antlr("org.antlr:antlr4:$antlrVersion")

    implementation("org.antlr:antlr4-runtime:$antlrVersion")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version")

    testImplementation("org.junit.jupiter:junit-jupiter-api:$junitJupiterVersion")
    testImplementation("org.junit.jupiter:junit-jupiter-params:$junitJupiterVersion")
    testImplementation("org.assertj:assertj-core:$assertJVersion")

    testRuntime("org.junit.jupiter:junit-jupiter-engine:$junitJupiterVersion")
    testRuntime("org.junit.platform:junit-platform-launcher:$junitPlatformVersion")
}

ext.javaVersion = JavaVersion.VERSION_1_8

sourceCompatibility = ext.javaVersion
targetCompatibility = ext.javaVersion

compileKotlin {
    kotlinOptions.jvmTarget = javaVersion.toString()
}

compileTestKotlin {
    kotlinOptions.jvmTarget = javaVersion.toString()
}

generateGrammarSource {
    maxHeapSize = "64m"
    arguments += ["-package", "ru.grushetsky.m3uparser"]
    outputDirectory = new File("${project.buildDir}/generated-src/antlr/main/ru/grushetsky/m3uparser")
}

compileJava.dependsOn generateGrammarSource
